<?xml  version="1.0" encoding="UTF-8"?>
<!--
  ~ EBI MetaboLights - http://www.ebi.ac.uk/metabolights
  ~ Cheminformatics and Metabolism group
  ~
  ~ European Bioinformatics Institute (EMBL-EBI), European Molecular Biology Laboratory, Wellcome Trust Genome Campus, Hinxton, Cambridge CB10 1SD, United Kingdom
  ~
  ~ Last modified: 2015-Mar-09
  ~ Modified by:   kenneth
  ~
  ~ Copyright 2015 EMBL - European Bioinformatics Institute
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:sec="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <context:component-scan base-package="uk.ac.ebi.metabolights" />
    <context:annotation-config/>

    <mvc:resources mapping="/static/**" location="/WEB-INF/static/" />
    <!--  this makes references to picture and style sheets work -->
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>

	<bean id="viewResolver"
	    class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
	</bean>

    <!--
    File uploading
     -->
	<!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
    <bean id="multipartResolver" class="uk.ac.ebi.metabolights.utils.AjaxMultipartResolver">
        <!--property name="maxUploadSize" value="100000"/-->
    </bean>




    <!--
    To configure Apache Tiles, an entry for bean TilesConfigure has to be made in spring-servlet.xml.
    An input configuration file /WEB-INF/tiles.xml is passed as argument in above bean definition.
    This file contains the Tiles definition for our web application.
    -->
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
	    <property name="definitions">
	        <list>
	            <value>/WEB-INF/tiles.xml</value>
	        </list>
	    </property>
    </bean>

	<!--
	We will provide a feature where user will be able to select language for the application. This is implemented by using
	org.springframework.web.servlet.i18n.LocaleChangeInterceptor class. The LocaleChangeInterceptor class will intercept any changes in the locale.
	These changes are then saved in cookies for future request. org.springframework.web.servlet.i18n.CookieLocaleResolver class will be used to
	store the locale changes in cookies.
	 -->
	<bean id="messageSource"
	    class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
	    <property name="basename" value="classpath:messages" />
	    <property name="defaultEncoding" value="UTF-8"/>
	</bean>
	<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
	    <property name="paramName" value="lang" />
	</bean>
	<bean id="localeResolver"
	    class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
	    <property name="defaultLocale" value="en"/>
	</bean>
	<bean id="handlerMapping"
	    class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
	    <property name="interceptors"> <ref bean="localeChangeInterceptor" />
	    </property>
	</bean>

	<!--
	Provider of SpringApplication Context
	Source: http://blog.jdevelop.eu/2008/07/06/access-the-spring-applicationcontext-from-everywhere-in-your-application/
	-->
	<bean id="contextApplicationContextProvider" class="uk.ac.ebi.metabolights.service.ApplicationContextProvider"></bean>


    <jee:jndi-lookup id="studiesLocation"   jndi-name="java:comp/env/studiesLocation" />
    <jee:jndi-lookup id="urlConfirmNewAccount"      jndi-name="java:comp/env/urlConfirmNewAccount" />
    <jee:jndi-lookup id="urlActivateNewAccount"     jndi-name="java:comp/env/urlActivateNewAccount" />
    <jee:jndi-lookup id="uploadDirectory"           jndi-name="java:comp/env/uploadDirectory" />
    <jee:jndi-lookup id="ftpServer"                 jndi-name="java:comp/env/ftpServer" />
    <jee:jndi-lookup id="ondemand"                  jndi-name="java:comp/env/ondemand" />
    <jee:jndi-lookup id="headerURL"                 jndi-name="java:comp/env/headerURL" />
    <jee:jndi-lookup id="localHeaderURL"            jndi-name="java:comp/env/localHeaderURL" />
    <jee:jndi-lookup id="footerURL"                 jndi-name="java:comp/env/footerURL" />
    <jee:jndi-lookup id="mailServer"		        jndi-name="java:comp/env/mailServer"/>
    <jee:jndi-lookup id="EBIHost"		            jndi-name="java:comp/env/EBIHost"/>
    <jee:jndi-lookup id="curationEmailAddress"		jndi-name="java:comp/env/curationEmailAddress"/>
    <jee:jndi-lookup id="BccPivotalEmailAddress"    jndi-name="java:comp/env/BccPivotalEmailAddress"/>
    <jee:jndi-lookup id="staticHeaderFooter"    jndi-name="java:comp/env/staticHeaderFooter"/>
    <jee:jndi-lookup id="userSpace" jndi-name="java:comp/env/userSpace"/>
    <jee:jndi-lookup id="OrcidClaimServiceURL" jndi-name="java:comp/env/OrcidClaimServiceURL"/>
    <jee:jndi-lookup id="OrcidLinkServiceURL" jndi-name="java:comp/env/OrcidLinkServiceURL"/>
    <jee:jndi-lookup id="OrcidRetreiveClaimsURL" jndi-name="java:comp/env/OrcidRetreiveClaimsURL"/>
    <jee:jndi-lookup id="queueFolder"                 jndi-name="java:comp/env/queueFolder" />

    <jee:jndi-lookup id="elasticsearchServerHost" jndi-name="java:comp/env/elasticsearchServerHost"/>
    <jee:jndi-lookup id="elasticsearchServerPort" jndi-name="java:comp/env/elasticsearchServerPort"/>

    <!--  register the application properties -->
    <bean id="propertyConfigurer" class="uk.ac.ebi.metabolights.utils.PropertiesUtil">
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
		<property name="locations">
			<list>
                <value>classpath:application.properties</value>
			</list>
		</property>
	</bean>

    <bean id="modelAndViewFactory" class="uk.ac.ebi.metabolights.webapp.StyleMAVFactory">
        <property name="jsonConfig" value="classpath:rl_frontier_config.json"/>
        <property name="localHeaderURL" value="#{localHeaderURL}"/>
        <property name="headerURL" value="#{headerURL}"/>
        <property name="footerURL" value="#{footerURL}"/>
    </bean>

    <!-- Database connectivity configuration -->
    <!-- Get the data source from tomcat (JNDI resource)  -->
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/metabolights"/>
        <property name="resourceRef" value="true" />
    </bean>


    <tx:annotation-driven />
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>


    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation">
            <value>classpath:hibernate.cfg.xml</value>
        </property>
        <property name="hibernateProperties">
            <props>
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>-->
                <!--prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop-->
                <!--<prop key="hibernate.search.default.indexBase">#{luceneIndexDirectoryShort}</prop>-->
            </props>
        </property>
    </bean>



    <!--
    The security department
     -->
    <sec:http use-expressions="true" auto-config='true'>
        <sec:intercept-url pattern="/updatepublicreleasedate" access="isAuthenticated()" />
        <sec:intercept-url pattern="/updatepublicreleasedateform" access="isAuthenticated()" />
        <sec:intercept-url pattern="/updatestatus" access="isAuthenticated()" />
		<sec:intercept-url pattern="/updatestudy" access="isAuthenticated()" />
        <sec:intercept-url pattern="/updatestudyform" access="isAuthenticated()" />
        <sec:intercept-url pattern="/makestudyprivateform" access="isAuthenticated()" />
		<sec:intercept-url pattern="/deleteStudy" access="isAuthenticated()" />
		<sec:intercept-url pattern="/submit" access="isAuthenticated()" />
		<sec:intercept-url pattern="/biisubmit" access="isAuthenticated()" />
		<sec:intercept-url pattern="/submittoqueue" access="isAuthenticated()" />
        <sec:intercept-url pattern="/referencespectraupload" access="isAuthenticated()" />
        <sec:intercept-url pattern="/mysubmissions" access="isAuthenticated()" />
        <sec:intercept-url pattern="/privatefiles" access="isAuthenticated()" />
        <sec:intercept-url pattern="/updateAccount" access="isAuthenticated()" />

        <sec:intercept-url pattern="/labs" access="isAuthenticated()" />
        <sec:intercept-url pattern="/editor" access="isAuthenticated()" />
		<sec:intercept-url pattern="/reindex" access="hasRole('ROLE_SUPER_USER')" />
        <sec:intercept-url pattern="/reindexall" access="hasRole('ROLE_SUPER_USER')" />
		<sec:intercept-url pattern="/config" access="hasRole('ROLE_SUPER_USER')" />
        <sec:intercept-url pattern="/tools" access="hasRole('ROLE_SUPER_USER')" />
        <sec:intercept-url pattern="/compoundsDashboard" access="hasRole('ROLE_SUPER_USER')" />
		<!--<sec:intercept-url pattern="/togglequeue" access="hasRole('ROLE_SUPER_USER')" />-->
        <!--<sec:intercept-url pattern="/queuestatus" access="hasRole('ROLE_SUPER_USER')" />-->
		<sec:intercept-url pattern="/users" access="hasRole('ROLE_SUPER_USER')" />
        <sec:intercept-url pattern="/parameters" access="hasRole('ROLE_SUPER_USER')" />
        <sec:intercept-url pattern="/updateParameters" access="hasRole('ROLE_SUPER_USER')" />
        <sec:intercept-url pattern="/insertParameters" access="hasRole('ROLE_SUPER_USER')" />
        <sec:intercept-url pattern="/addParameters" access="hasRole('ROLE_SUPER_USER')" />
        <sec:intercept-url pattern="/deleteParam" access="hasRole('ROLE_SUPER_USER')" />
        <sec:intercept-url pattern="/clearreflayercache" access="hasRole('ROLE_SUPER_USER')" />
        <sec:intercept-url pattern="/importmetabolites*" access="hasRole('ROLE_SUPER_USER')" />
        <sec:intercept-url pattern="/myAccount" access="isAuthenticated()" />
        <sec:intercept-url pattern="/securedredirect" access="isAuthenticated()" />
        <sec:intercept-url pattern="/login" access="permitAll"/>
        <sec:intercept-url pattern="/**" access="permitAll"/>
        <sec:logout logout-success-url="/loggedout" delete-cookies="JSESSIONID" />
        <sec:form-login login-page='/login' authentication-failure-url="/login?login_error=1" default-target-url="/login-success"  />
    </sec:http>
    <sec:authentication-manager>
        <sec:authentication-provider ref="isaTabAuthenticationProv" />
    </sec:authentication-manager>
    <bean id="isaTabAuthenticationProv" class="uk.ac.ebi.metabolights.authenticate.IsaTabAuthenticationProvider"/>


    <!--<jee:jndi-lookup id="mailpassword" jndi-name="java:comp/env/mailpassword"/>-->

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">

        <property name="host"><value>#{mailServer}</value></property>

        <!-- Gmail email settings -->
        <!--<property name="port"><value>587</value></property>-->
        <!--<property name="protocol"><value>smtp</value></property>-->
        <!--<property name="username"><value>p.conesa.mingo</value></property>-->
        <!--<property name="password"><value>#{mailpassword}</value></property>-->
        <!--<property name="javaMailProperties">-->
            <!--<props>-->
                <!--<prop key="mail.smtp.auth">true</prop>-->
                <!--<prop key="mail.smtp.starttls.enable">true</prop>-->
                <!--<prop key="mail.smtp.quitwait">false</prop>-->
            <!--</props>-->
        <!--</property>-->
        <!-- End gmail settings-->
    </bean>

    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <value>
                resource.loader=class
                class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
            </value>
        </property>
    </bean>


	<bean id="reminderTemplate" class="org.springframework.mail.SimpleMailMessage">
	  <property name="from" value="${replyTo}"/>
	  <property name="subject" value="Your new MetaboLights password"/>
	</bean>

    <bean id="verifyNewAccountTemplate" class="org.springframework.mail.SimpleMailMessage">
      <property name="from" value="${replyTo}"/>
      <property name="subject" value="Please confirm your account request for MetaboLights"/>
    </bean>

    <bean id="activateAccountTemplate" class="org.springframework.mail.SimpleMailMessage">
      <property name="from" value="${replyTo}"/>
      <property name="subject" value="New MetaboLights account request"/>
      <property name="to"><list><value>${mtblAdminEmailAddress}</value></list> </property>
    </bean>

    <bean id="accountApprovedTemplate" class="org.springframework.mail.SimpleMailMessage">
      <property name="from" value="${replyTo}"/>
      <property name="cc" ><list><value>#{curationEmailAddress}</value></list></property>
      <property name="subject" value="Your account for MetaboLights is now active"/>
    </bean>

    <bean id="studySoonLiveTemplate" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${replyTo}"/>
        <property name="subject" value="Your MetaboLights study will go public soon"/>
    </bean>

    <bean id="contactUsTemplate" class="org.springframework.mail.SimpleMailMessage">
      <property name="subject" value="MetaboLights Website General Request"/>
      <property name="to"><list><value>"metabolights-help@ebi.ac.uk"</value></list></property>
    </bean>

    <!--<bean id="queueManager" class="uk.ac.ebi.metabolights.model.queue.SubmissionQueueManager"/>-->
</beans>
